==========================================
Print a 2d hash based on size of n integer
==========================================


::
	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(4)
	####
	####
	####
	####

	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########

	>>> print_square(1)
	#

	>>> print_square(-1)
	Traceback (most recent call last):
	ValueError: size must be >= 0

	>>> print_square(-0.6)
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square("2")
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(float('-inf'))
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(float('NaN'))
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(None)
	Traceback (most recent call last):
	TypeError: size must be an integer

