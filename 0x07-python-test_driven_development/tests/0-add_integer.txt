------------------------------------
How to use 0-add_integer.py  integer
------------------------------------

Converts floating point numbers to integers and perform the operation

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 2)
	3

	>>> add_integer(100, -2)
	98

	>>> add_integer(2)
	100
	
	>>> add_integer(100.3, -2)
	98

	>>> add_integer(1, -2)
	-1


	>>> add_integer(1.4, 2)
	3

    Not-Number parameters raise a TypeError
    =======================================
::

    >>> add_integer(1, "Hello")
	Traceback (most recent call last):
	TypeError: b must be an integer

    >>> add_integer("Hello", 2)
	Traceback (most recent call last):
	TypeError: a must be an integer


    Add_infinity
    ============

::

	>>> add_integer(4, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

::

	>>> add_integer(float('-inf'), 5)
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

    arg_Invalid
    ===========

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(None, None)
	Traceback (most recent call last):
	TypeError: a must be an integer

    For Nan
    =======

::

	>>> add_integer(float('NaN'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer
